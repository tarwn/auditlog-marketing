{
    "swagger": "2.0",
    "info": {
        "version": "1.0",
        "title": "AuditLog.co API 1.0",
        "description": "API for AuditLog.co",
        "contact": {
            "name": "Eli Weinstock-Herman",
            "email": "eli@auditlog.co"
        },
        "license": {
            "name": "Commercial"
        }
    },
    "paths": {
        "/api/v1/Actors/{uuid}": {
            "get": {
                "tags": [
                    "Actors"
                ],
                "summary": "Query to see what User information is in your AuditLog\r\nfor the given User (by UUID).",
                "operationId": "ApiV1ActorsByUuidGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Your UUID for the given user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ActorQueryResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "APIKey": [
                            "APIAccessOnly"
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "Actors"
                ],
                "operationId": "ApiV1ActorsByUuidPost",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "actorUpdate",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ActorUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ActorQueryResponse"
                        }
                    },
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "security": [
                    {
                        "APIKey": [
                            "APIAccessOnly"
                        ]
                    }
                ]
            }
        },
        "/api/v1/Actors/{uuid}/forget": {
            "post": {
                "tags": [
                    "Actors"
                ],
                "operationId": "ApiV1ActorsByUuidForgetPost",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ActorQueryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "security": [
                    {
                        "APIKey": [
                            "APIAccessOnly"
                        ]
                    }
                ]
            }
        },
        "/api/v1/events": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Query for a set of events.",
                "operationId": "ApiV1EventsGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "clientID",
                        "in": "query",
                        "description": "UUID for one of your clients",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fromDate",
                        "in": "query",
                        "description": "Starting date to filter for",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "throughDate",
                        "in": "query",
                        "description": "End date to filter through",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/EventSearchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "security": [
                    {
                        "APIKey": [
                            "APIAccessOnly"
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "Events"
                ],
                "operationId": "ApiV1EventsPost",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "entries",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EventEntry"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/EventAcceptedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "security": [
                    {
                        "APIKey": [
                            "APIAccessOnly"
                        ]
                    }
                ]
            }
        },
        "/api/v1/events/{id}": {
            "get": {
                "tags": [
                    "Events"
                ],
                "operationId": "ApiV1EventsByIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/RecordedEvent"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "security": [
                    {
                        "APIKey": [
                            "APIAccessOnly"
                        ]
                    }
                ]
            }
        },
        "/api/v1/Values/verify/api/ok": {
            "get": {
                "tags": [
                    "Values"
                ],
                "operationId": "ApiV1ValuesVerifyApiOkGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/VerifyModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "security": [
                    {
                        "APIKey": [
                            "APIAccessOnly"
                        ]
                    }
                ]
            }
        },
        "/api/v1/Values/verify/api/exception": {
            "get": {
                "tags": [
                    "Values"
                ],
                "operationId": "ApiV1ValuesVerifyApiExceptionGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "security": [
                    {
                        "APIKey": [
                            "APIAccessOnly"
                        ]
                    }
                ]
            }
        },
        "/api/v1/Values/verify/api/400": {
            "post": {
                "tags": [
                    "Values"
                ],
                "operationId": "ApiV1ValuesVerifyApi400Post",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "SampleString",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "SampleNumber",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "APIKey": [
                            "APIAccessOnly"
                        ]
                    }
                ]
            }
        },
        "/api/v1/Values/verify/api/404": {
            "get": {
                "tags": [
                    "Values"
                ],
                "operationId": "ApiV1ValuesVerifyApi404Get",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "security": [
                    {
                        "APIKey": [
                            "APIAccessOnly"
                        ]
                    }
                ]
            }
        },
        "/api/v1/views/configuration/{viewId}": {
            "get": {
                "tags": [
                    "Views"
                ],
                "summary": "Returns the customized view settings for this view.",
                "operationId": "ApiV1ViewsConfigurationByViewIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "viewId",
                        "in": "path",
                        "description": "View Id for your customized View",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ViewConfigurationModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "security": [
                    {
                        "APIKey": [
                            "ViewAPIAccessOnly"
                        ]
                    }
                ]
            }
        },
        "/api/v1/views/{viewId}/{clientUUId}": {
            "get": {
                "tags": [
                    "Views"
                ],
                "summary": "Returns the entries for a given page of a customized View.",
                "operationId": "ApiV1ViewsByViewIdByClientUUIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "viewId",
                        "in": "path",
                        "description": "View Id for your customized View",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "clientUUId",
                        "in": "path",
                        "description": "Your unique Id for your client",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page name to retrieve (or empty for most recent)",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PagedViewResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "security": [
                    {
                        "APIKey": [
                            "ViewAPIAccessOnly"
                        ]
                    }
                ]
            }
        }
    },
    "definitions": {
        "ActorQueryResponse": {
            "type": "object",
            "properties": {
                "actors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Actor"
                    }
                }
            }
        },
        "Actor": {
            "description": "Represents the latest data for an Actor in the system, including GDPR \"Forgotten\" status.",
            "type": "object",
            "properties": {
                "uuid": {
                    "description": "A universally unique Id that identifies the user in your system.",
                    "type": "string"
                },
                "name": {
                    "description": "A human-readable name for at a glance information.",
                    "type": "string"
                },
                "email": {
                    "description": "A human-readable email address for at a glance information.",
                    "type": "string"
                },
                "isForgotten": {
                    "description": "Indicator that the personally identifiable information on this record has been redacted.",
                    "type": "boolean"
                }
            }
        },
        "ActorUpdateRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            }
        },
        "ApiError": {
            "type": "object",
            "properties": {
                "statusCode": {
                    "format": "int32",
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "details": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "EventEntry": {
            "description": "Represents an Event that you are reporting from your system\r\nto be logged in the AuditLog. \r\n\r\nEvents that you receive back from the API will include richer\r\ninformation, including a unique Id and Reception Time, but \r\notherwise match the same properties you sent.",
            "required": [
                "uuid",
                "time",
                "action",
                "context"
            ],
            "type": "object",
            "properties": {
                "uuid": {
                    "description": "A unique identifier you generate for the event to ensure idempotent\r\nstorage of the event.",
                    "maxLength": 80,
                    "minLength": 0,
                    "type": "string"
                },
                "client": {
                    "$ref": "#/definitions/EventEntryClient",
                    "description": "Information about the Client using your system, assuming users belong to\r\nmore than one installation or customer."
                },
                "time": {
                    "format": "date-time",
                    "description": "The time the Event occurred, provided in ISO8601 format.",
                    "type": "string"
                },
                "action": {
                    "description": "The Action that occurred.",
                    "maxLength": 40,
                    "minLength": 0,
                    "type": "string"
                },
                "description": {
                    "description": "A human readable description of the action/event.",
                    "maxLength": 120,
                    "minLength": 0,
                    "type": "string"
                },
                "url": {
                    "description": "A URL to link to a change record or additional information for this Action/Event.",
                    "maxLength": 400,
                    "minLength": 0,
                    "type": "string"
                },
                "actor": {
                    "$ref": "#/definitions/EventEntryActor",
                    "description": "The Actor that made the change, either a user or artificial SYSTEM record."
                },
                "context": {
                    "$ref": "#/definitions/EventEntryContext",
                    "description": "Context from the Actor and your service for additional log detail."
                },
                "target": {
                    "$ref": "#/definitions/EventEntryTarget",
                    "description": "The Target that the Actor performed the Action against. Send a `TargetUser` if it is a User/Actor instead."
                },
                "targetUser": {
                    "$ref": "#/definitions/EventEntryTargetUser",
                    "description": "The Target User that the Actor performed the Action against. Send a `Target` if it is not a User/Actor instead."
                }
            }
        },
        "EventEntryClient": {
            "required": [
                "uuid"
            ],
            "type": "object",
            "properties": {
                "uuid": {
                    "description": "A Unique Identifier for this client that you can map back to your internal systems.",
                    "maxLength": 120,
                    "minLength": 0,
                    "type": "string"
                },
                "name": {
                    "description": "A human-readable description of the client for easy identification at a glance.",
                    "maxLength": 120,
                    "minLength": 0,
                    "type": "string"
                }
            }
        },
        "EventEntryActor": {
            "description": "The person or service account that initiatied the Action.",
            "required": [
                "uuid"
            ],
            "type": "object",
            "properties": {
                "uuid": {
                    "description": "A universally unique ID you can use to identify the actor against your own records.",
                    "maxLength": 80,
                    "minLength": 0,
                    "type": "string"
                },
                "name": {
                    "description": "A human-readable name for the Actor for easy identification at a glance.",
                    "maxLength": 120,
                    "minLength": 0,
                    "type": "string"
                },
                "email": {
                    "description": "A human-readable email address for the Actor for easy identification at a glance.",
                    "maxLength": 120,
                    "minLength": 0,
                    "type": "string"
                }
            }
        },
        "EventEntryContext": {
            "required": [
                "server"
            ],
            "type": "object",
            "properties": {
                "client": {
                    "$ref": "#/definitions/EventEntryContextClient",
                    "description": "Properties of the Actor's client/system for audit purposes."
                },
                "server": {
                    "$ref": "#/definitions/EventEntryContextServer",
                    "description": "Properties of your software/server that they are interacting with."
                }
            }
        },
        "EventEntryTarget": {
            "required": [
                "type",
                "uuid"
            ],
            "type": "object",
            "properties": {
                "type": {
                    "description": "The Type of the Target being affected.",
                    "maxLength": 40,
                    "minLength": 0,
                    "type": "string"
                },
                "uuid": {
                    "description": "A universally unique Id for the Target being affected that you can connect back to the record on your systems.",
                    "maxLength": 80,
                    "minLength": 0,
                    "type": "string"
                },
                "label": {
                    "description": "A human-readable description of the target being affected, for at a glance information.",
                    "maxLength": 120,
                    "minLength": 0,
                    "type": "string"
                },
                "url": {
                    "description": "A URL reference back to the target being affected, if useful.",
                    "maxLength": 400,
                    "minLength": 0,
                    "type": "string"
                }
            }
        },
        "EventEntryTargetUser": {
            "description": "The User / Actor that has been altered / targeted",
            "required": [
                "uuid"
            ],
            "type": "object",
            "properties": {
                "uuid": {
                    "description": "A universally unique ID you can use to identify the actor against your own records.",
                    "maxLength": 80,
                    "minLength": 0,
                    "type": "string"
                },
                "name": {
                    "description": "A human-readable name for the Actor for easy identification at a glance.",
                    "maxLength": 120,
                    "minLength": 0,
                    "type": "string"
                },
                "email": {
                    "description": "A human-readable email address for the Actor for easy identification at a glance.",
                    "maxLength": 120,
                    "minLength": 0,
                    "type": "string"
                }
            }
        },
        "EventEntryContextClient": {
            "type": "object",
            "properties": {
                "ipAddress": {
                    "description": "IP Address that Actor is connecting from, if applicable.",
                    "maxLength": 15,
                    "minLength": 0,
                    "pattern": "[012]?\\d?\\d\\.[012]?\\d?\\d\\.[012]?\\d?\\d\\.[012]?\\d?\\d",
                    "type": "string"
                },
                "browserAgent": {
                    "description": "Actor's browser User Agent, if applicable.",
                    "maxLength": 4096,
                    "minLength": 0,
                    "type": "string"
                }
            }
        },
        "EventEntryContextServer": {
            "required": [
                "serverId",
                "version"
            ],
            "type": "object",
            "properties": {
                "serverId": {
                    "description": "A server Id for the server the Actor is connected to, if applicable.",
                    "maxLength": 240,
                    "minLength": 0,
                    "type": "string"
                },
                "version": {
                    "description": "The version of your software the Actor is connected to, if applicable.",
                    "maxLength": 80,
                    "minLength": 0,
                    "type": "string"
                }
            }
        },
        "EventAcceptedResponse": {
            "type": "object",
            "properties": {
                "receivedEvents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ReceivedEventEntryId"
                    }
                }
            }
        },
        "ReceivedEventEntryId": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "EventSearchResponse": {
            "type": "object",
            "properties": {
                "_id": {
                    "$ref": "#/definitions/EventSearchId"
                },
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordedEvent"
                    }
                }
            }
        },
        "EventSearchId": {
            "description": "Generated id to represent a query for Event Entries",
            "type": "object",
            "properties": {
                "timestamp": {
                    "format": "date-time",
                    "description": "Timestamp that the results were put together",
                    "type": "string"
                },
                "type": {
                    "description": "The type of request",
                    "type": "string"
                },
                "href": {
                    "description": "The Href for this specific response",
                    "type": "string"
                },
                "label": {
                    "description": "A human-readable label for an end user looking at this dataset",
                    "type": "string"
                }
            }
        },
        "RecordedEvent": {
            "type": "object",
            "properties": {
                "_links": {
                    "$ref": "#/definitions/RecordedEventLink"
                },
                "id": {
                    "$ref": "#/definitions/EventEntryId"
                },
                "receptionTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "client": {
                    "$ref": "#/definitions/EventEntryClient"
                },
                "time": {
                    "format": "date-time",
                    "type": "string"
                },
                "action": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "actor": {
                    "$ref": "#/definitions/EventEntryActor"
                },
                "context": {
                    "$ref": "#/definitions/EventEntryContext"
                },
                "target": {
                    "$ref": "#/definitions/EventEntryTarget"
                }
            }
        },
        "RecordedEventLink": {
            "type": "object",
            "properties": {
                "href": {
                    "type": "string"
                }
            }
        },
        "EventEntryId": {
            "type": "object",
            "properties": {
                "rawValue": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "VerifyModel": {
            "required": [
                "sampleString"
            ],
            "type": "object",
            "properties": {
                "sampleString": {
                    "maxLength": 10,
                    "minLength": 3,
                    "type": "string"
                },
                "sampleNumber": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "ViewConfigurationModel": {
            "required": [
                "custom",
                "columns"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "accessKey": {
                    "type": "string"
                },
                "custom": {
                    "$ref": "#/definitions/ViewCustomizationModel"
                },
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ViewColumnConfigurationModel"
                    }
                }
            }
        },
        "ViewCustomizationModel": {
            "required": [
                "headerLinks"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "maxLength": 400,
                    "type": "string"
                },
                "logo": {
                    "maxLength": 400,
                    "type": "string"
                },
                "title": {
                    "maxLength": 40,
                    "type": "string"
                },
                "copyright": {
                    "maxLength": 80,
                    "type": "string"
                },
                "headerLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ViewCustomizationHeaderLink"
                    }
                }
            }
        },
        "ViewColumnConfigurationModel": {
            "required": [
                "label",
                "lines"
            ],
            "type": "object",
            "properties": {
                "order": {
                    "format": "int32",
                    "type": "integer"
                },
                "label": {
                    "maxLength": 40,
                    "type": "string"
                },
                "lines": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ViewColumnConfigurationLineModel"
                    }
                }
            }
        },
        "ViewCustomizationHeaderLink": {
            "required": [
                "label",
                "url"
            ],
            "type": "object",
            "properties": {
                "label": {
                    "maxLength": 40,
                    "type": "string"
                },
                "url": {
                    "maxLength": 400,
                    "type": "string"
                }
            }
        },
        "ViewColumnConfigurationLineModel": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string"
                }
            }
        },
        "PagedViewResult": {
            "description": "A paged set of events for a pre-configured View. The view is configured in the\r\napplication to serve data to the drop-in component or your own custom\r\ncomponent.",
            "type": "object",
            "properties": {
                "_id": {
                    "$ref": "#/definitions/EventSearchId",
                    "description": "A generated \"id\" that represents this unique response"
                },
                "_links": {
                    "description": "Links to other pages of data you can navigate to from this set.",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/PagedViewLink"
                    }
                },
                "entries": {
                    "description": "The relevant Event Entries for this View",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordedEvent"
                    }
                }
            }
        },
        "PagedViewLink": {
            "type": "object",
            "properties": {
                "label": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "href": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "APIKey": {
            "name": "X-API-KEY",
            "in": "header",
            "type": "apiKey"
        }
    },
    "security": [
        {
            "APIKey": [
                "APIAccessOnly"
            ]
        }
    ]
}